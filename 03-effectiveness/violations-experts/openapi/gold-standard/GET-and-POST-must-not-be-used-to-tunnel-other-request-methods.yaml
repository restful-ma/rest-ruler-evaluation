openapi: 3.0.3
info:
  description: This is an example OpenAPI definition file.
  version: 0.1.0
  title: Example OpenAPI Definition File
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.example.com/v1
    description: Production server (uses live data)
  - url: https://sandbox-api.example.com:8443/v1
    description: Sandbox server (uses test data)
paths:  
  /users/{userId}:
    get:
      tags:
        - kotstein
        - silva
      description: Handle the details of a user identified via ID
      summary: Handle a specific user
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
        - name: operation
          in: query
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A user with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    post:
      tags:
        - kotstein
        - bogner
      description: Handle customer details
      summary: Handle customer details
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      requestBody:
        description: Details of the new user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                userName:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        400:
          description: The specified user details are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /customers/{id}:
    post:
      tags:
        - bogner
      description: Handle customer details
      summary: Handle customer details
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      requestBody:
        description: Details of the new user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                userName:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        400:
          description: The specified user details are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /customers/{id}/locations:
    post:
      tags:
        - bogner
      description: Handle customer details
      summary: Handle customer details
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      requestBody:
        description: Details of the new user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                function:
                  type: string
                userName:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        400:
          description: The specified user details are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /users:
    get:
      tags:
        - silva
      description: Handles the details of a user identified via ID
      summary: Hadnles a specific user
      parameters:
        - name: operation
          in: query
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A user with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /retrieve-user/{userId}:
    post:
      tags:
        - silva
      description: Retrieve a new user with details
      summary: Retrieve a new user
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      requestBody:
        description: Details of the new user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        400:
          description: The specified user details are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /activities/{Id}:
    post:
      tags:
        - mohs
      description: Delete operation disguised as a post request with deletion param in query
      summary: Deletes a activity
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
            minimum: 1
        - name: delete-flag
          in: query
          required: true
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activity"
        400:
          description: The specified user details are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /users/{userId}/details:
    post:
      tags:
        - kopp
      description: Returns the details of a user identified via ID
      summary: Get a specific user
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: The specified user details are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /accounts/{accountId}/purge-emails:
    get:
      tags:
        - pfaff
      description: Delete all emails from a specific account
      summary: Delete all emails from a specific account
      parameters:
        - name: accountId
          in: path
          required: true
          description: The ID of the account
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"  
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"                
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  # changed to a get request as post operation would make this entry valid
  /current-users/{id}:
    get:
      tags:
        - betka
      description: Does not return a representation of the resource
      summary: Get a specific user
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        400:
          description: The specified user details are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /employers/{employer-Id}:
    get:
      tags:
        - betka
      description: Handle the details of a employer identified via ID
      summary: Handle a specific employer
      parameters:
        - name: employer-Id
          in: path
          required: true
          description: The ID of the employer
          schema:
            type: string
            minimum: 1
        - name: action
          in: query
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employer"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A user with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    post:
      tags:
        - betka
      description: Handle the details of a employer identified via ID
      summary: Handle a specific employer
      parameters:
        - name: employer-Id
          in: path
          required: true
          description: The ID of the employer
          schema:
            type: string
            minimum: 1
        - name: action
          in: query
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employer"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A user with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    delete:
      tags:
        - betka
      description: Handle the details of a employer identified via ID
      summary: Handle a specific employer
      parameters:
        - name: employer-Id
          in: path
          required: true
          description: The ID of the employer
          schema:
            type: string
            minimum: 1
        - name: action
          in: query
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employer"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A user with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"  
components:
  schemas:
    User:
      description: A user of the system
      type: object
      properties:
        userId:
          type: number
        userName:
          type: string
        email:
          type: string
    Employer:
      description: A user of the system
      type: object
      properties:
        userId:
          type: number
        userName:
          type: string
        email:
          type: string    
    Activity:
      description: A user of the system
      type: object
      properties:
        id:
          type: number
        name:
          type: string
    GenericResponse:
      description: A generic response object with a message attribute
      type: object
      properties:
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
security:
  - BasicAuth: []
