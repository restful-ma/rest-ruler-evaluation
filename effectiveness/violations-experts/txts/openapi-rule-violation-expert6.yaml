openapi: 3.0.3
info:
  description: This is an example OpenAPI definition file.
  version: 0.1.0
  title: Example OpenAPI Definition File
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.example.com/v1
    description: Production server (uses live data)
  - url: https://sandbox-api.example.com:8443/v1
    description: Sandbox server (uses test data)
paths:
  /devices:
    post:
      description: Content-Type must be used
      summary: Create a new device
      requestBody:
        description: A device object
      responses:
        200:
          description: Successful request
        401:
          description: Unauthorized
        default:
          description: Unexpected error
  /queues/{queueId}/purge-queue:
    delete:
      description: CRUD function names should not be used in URIs
      summary: Delete all messages in a queue
      parameters:
        - name: queueId
          in: path
          required: true
          description: The ID of the queue
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"  
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"                
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"          
  /cars/{carId}/parts.pdf/download:
    get:
      description: File extensions should not be included in URIs
      summary: Get the part list of a specific car as pdf
      parameters:
        - name: carId
          in: path
          required: true
          description: The ID of the car
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"                
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /orders/{orderId}:                
    put:
      description: GET must be used to retrieve a representation of a resource
      summary: Get a specific order
      parameters:
        - name: orderId
          in: path
          required: true
          description: The ID of the Order
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A order with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /university+of+stuttgart/students/{studentId}:                    
    delete:
      description: Hyphens (-) should be used to improve the readability of URIs
      summary: Remove Student from university
      parameters:
        - name: studentId
          in: path
          required: true
          description: The ID of the student who should be deleted
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: Successfully deleted student
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A student with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /Servers/{serverId}:                    
    get:
      description: Lowercase letters should be preferred in URI paths
      summary: Get a specific Server
      parameters:
        - name: serverId
          in: path
          required: true
          description: The ID of the server
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Server"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A server with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /store/{storeId}/books:                    
    get:
      description: A plural noun should be used for collection/store names
      summary: Get all books from a specific store out of a collection of stores
      parameters:
        - name: storeId
          in: path
          required: true
          description: The ID of the store
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:            
                type: array
                items:
                    $ref: '#/components/schemas/Book'  
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"   
  /houses-{houseId}-rooms:                    
    post:
      description: Forward slash separator (/) must be used to indicate a hierarchical relationship
      summary: add a new room to a house
      parameters:
        - name: houseId
          in: path
          required: true
          description: The ID of the house
          schema:
            type: string
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'            
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"   
  /databases/{databaseId}/admins:                    
    get:
      description: A singular noun should be used for document names
      summary: get the admin of a specific database
      parameters:
        - name: databaseId
          in: path
          required: true
          description: The ID of the database
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Admin"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"      
  /files/:                    
    delete:
      description: A trailing forward slash (/) should not be included in URIs
      summary: delete all files in the system
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"    
  /accounts/{accountId}/purge-emails:
    get:
      description: GET and POST must not be used to tunnel other request methods
      summary: Delete all emails from a specific account
      parameters:
        - name: accountId
          in: path
          required: true
          description: The ID of the account
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"  
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"                
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse" 
  /users/{userId}:
    get:
      description: 401 (Unauthorized) must be used when there is a problem with the client credentials
      summary: Get a specific user
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"  
        400:
          description: Not authorized to retrieve the specified resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /users/{userId}/invoices/power_consumption_invoice:                    
    post:
      description: Underscores (_) should not be used in URIs
      summary: Add a power consumption invoice to a specific user
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'            
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse" 
  /topics/{topicId}/notification:                    
    post:
      description: A verb or verb phrase should be used for controller names
      summary: send notification to subscriber of a specific topic
      parameters:
        - name: topicId
          in: path
          required: true
          description: The ID of the topic
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"                
components:
  schemas:
    User:
      description: A user of the system
      type: object
      properties:
        userId:
          type: number
        userName:
          type: string
        email:
          type: string
    Book:
      description: A book
      type: object
      properties:
        bookId:
          type: number
        bookName:
          type: string
    Invoice:
      description: An invoice
      type: object
      properties:
        invoiceId:
          type: number
        paymentMethod:
          type: string
        currency:
          type: string
        amount:
          type: number
    Room:
      description: A room
      type: object
      properties:
        roomId:
          type: number
        roomName:
          type: string   
    Admin:
      description: An admin of a database
      type: object
      properties:
        adminId:
          type: number
        email:
          type: string
        name:
          type: string
    Order:
      description: An order
      type: object
      properties:
        orderId:
          type: number
        paymentMethod:
          type: string
        item:
          type: string   
    Server:
      description: A Server
      type: object
      properties:
        serverId:
          type: number
        cpuType:
          type: string
        cpuCores:
          type: string            
    GenericResponse:
      description: A generic response object with a message attribute
      type: object
      properties:
        message:
          type: string

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
security:
  - BasicAuth: []
